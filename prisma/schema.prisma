// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  userId    String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  car Car[]
  bid Bid[]

  @@map("user")
}

model Car {
  carId        String   @id @default(auto()) @map("_id") @db.ObjectId
  model        String
  brand        String
  license      String   @unique
  km           Int
  minimumPrice Int
  ownerId      String   @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  owner   User      @relation(fields: [ownerId], references: [userId])
  auction Auction[]

  @@map("car")
}

model Auction {
  auctionId String   @id @default(auto()) @map("_id") @db.ObjectId
  status    String
  startDate DateTime
  endDate   DateTime
  carId     String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  car  Car   @relation(fields: [carId], references: [carId])
  bids Bid[]

  @@map("auction")
}

model Bid {
  bidId     String   @id @default(auto()) @map("_id") @db.ObjectId
  value     Float
  userId    String   @db.ObjectId
  auctionId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [userId])
  auction Auction @relation(fields: [auctionId], references: [auctionId])

  @@map("bid")
}
